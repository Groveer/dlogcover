---
description:
globs:
alwaysApply: false
---
# 开发流程与最佳实践

## 开发流程
1. 功能开发
   - 创建功能分支
   - 编写测试用例
   - 实现功能代码
   - 本地测试验证
   - 代码审查
   - 合并主分支

2. 代码审查清单
   - 代码风格符合规范
   - 测试覆盖率达标
   - 文档完整性
   - 性能考虑
   - 错误处理完善

## 测试规范
1. 单元测试
   - 使用 pytest 框架
   - 测试文件命名：test_*.py
   - 测试类命名：Test*
   - 测试函数命名：test_*

2. 测试覆盖率要求
   - 核心模块覆盖率 > 90%
   - 工具类覆盖率 > 80%
   - 使用 pytest-cov 统计

3. 测试用例编写
   - 测试用例描述清晰
   - 包含正常和异常场景
   - 边界条件测试
   - 模拟外部依赖

## 性能优化
1. 代码优化
   - 使用适当的数据结构
   - 避免重复计算
   - 合理使用缓存
   - 注意内存使用

2. 日志处理
   - 使用 logging 模块
   - 合理设置日志级别
   - 避免过多日志输出
   - 关键信息必须记录

## 错误处理
1. 异常处理原则
   - 只处理预期的异常
   - 提供有意义的错误信息
   - 保持异常粒度合适
   - 记录必要的上下文

2. 错误码规范
   - 统一错误码定义
   - 清晰的错误描述
   - 错误分类合理
   - 保持向后兼容

## 文档维护
1. 代码文档
   - 模块文档
   - 函数文档
   - 类文档
   - 示例代码

2. 项目文档
   - README 文件
   - 安装说明
   - 使用教程
   - API 文档
   - 常见问题
